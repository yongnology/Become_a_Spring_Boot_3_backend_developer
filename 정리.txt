00장 개발 환경 구축하기

- index.html 파일은
static 폴더에 있어야 인식 가능하다.

======================================

01장 자바 백엔드 개발자가 알아두면 좋은 지식

■ 클라이언트란?
서버로 요청하는 프로그램을 모두 일컬어 말한다.

■ 서버란?
클라이언트의 요청을 받아 처리하는 주체.

■ 데이터베이스란?
여러 사람이 데이터를 한 군데에 모아놓고 여러 사람이 사용할 목적으로 관리한느 데이터 저장소

클라이언트에서 SQL, 즉 데이터베이스를 조작하기 위한 언어로 데이터베이스 관리 시스템에
데이터를 요청하면 데이터베이스 관리 시스템은 데이터베이스에서 데이터를 꺼내 응답한다.

■ RDB란?
- Relational Database의 약자. 관계형 데이터베이스 라는 뜻.
- NoSQL 또는 NewSQL로 구분한다.
- 관계형 데이터베이스는 데이터를 행row 과 열column로 이루어진 테이블로 관리하며
  기본키(primary key)를 사용해 각 행을 식별 한다.

■ SQL이란?
Structured Query Language의 약자로 말그대로 쿼리. 즉 데이터 검색을 하는 언어

■ NoSQL이란?
- SQL을 안쓴다는 의미로 사용되기도 하지만, 최근에는 Not Only SQL의 의미로 많이 사용한다.
- 예시로, 다이나모디비, 카우치베이스, 몽고디비 와 같은 NoSQL 데이터베이스들이 있다.

■ 라이브러리란?
애플리케이션 개발에 필요한 기능인 클래스, 함수 등을 모아놓은 코드의 모음

■ 프레임워크란?
소프트웨어 개발을 수월하게 하기 위한 소프트웨어 개발 환경

프레임워크는 애플리케이션을 개발할 때 전체적인 구조를 잡기 위해 사용는것이며
라이브러리는 개발을 하는 과정에서 필요한 기능을 구현하기 위해 사용하는 것

■ 백엔드 개발자의 업무
과제할당 -> 과제분석 -> 개발 -> 테스트(리뷰)
-> QA 및 버그 수정-> 배포 -> 유지보수

======================================

02장 스프링 부트 3 시작하기
2.1 스프링과 스프링부트

■ 스프링과 스프링부트
2003년 6월 스프링 프레임워크가 등장.
2013년 4월 0.5.0.M6 버전 첫 스프링 부트 출시

2.2 스프링 콘셉트 공부하기

■ 스프링 부트의 주요 특징
- 톰켓, 제티, 언더토우 같은 웹 애플리케이션 서버(WAS)가 내장되어 있어서 따로 설치하지 않아도 독립적 실행 가능
- 빌드 구성을 단순화하는 스프링 부트 스타터를 제공
- XML 설정을 하지 않고 자바 코드로 모두 작성 가능
- JAR를 이용해서 자바 옵션만으로도 배포가 가능
- 애플리케이션의 모니터링 및 관리 도구인 스프링 액츄에이터(spring actuator)을 제공

■ IoC란?
Inversion of Control을 줄인 표현. 직역하면 제어의 역전.

■ Di란?
스프링에서는 객체들을 관리하기 위해 제어의 역전을 사용한다.
제어의 역전을 구현하기 위해 사용하는 방법이 DI이다.
Dependency Injection의 줄인말. 직역하면 의존성 주입.

DI란 어떤 클래스가 다른 클레스에 의존한다는 뜻.
예) @Autowired 애너테이션은 스프링 컨테이너에 있는 빈이라는 것을 주입하는 역할
빈은 쉽게 말해 스플이 컨테이너에서 관리하는 객체를 말한다.

예제)
public class A {
  // A에서 B를 주입받음
  @Autowired
  B b;
}

스프링의 경우 클래스 A에서 B객체를 쓰고 싶은 경우
객체를 직접 생성하는 것이 아니라 스프링 컨테이너에서 객체를 주입받아 사용한다.
스프링의 핵심 개념.

■ 스프링 컨테이너란?
스프링 컨테이너는 빈을 생성하고 관리한다.
즉 빈이 생성되고 소멸되기까지의 생명주기를 이 스프링 컨테이너가 관리하는 것이다.

■ 빈이란?
스프링 컨테이너가 생성하고 관리하는 객체.
위의 B가 빈이다.

클래스를 빈으로 등학하는 방법 예시)
@Component  // 클래스 MyBean 빈으로 등록
public class MyBean {
}

간단하게 정리하면, [스프링에서 제공해주는 객체]

■ AOP란?
Aspect Oriented Programming 의 줄인말. 직역하면 관점 지향 프로그래밍
프로그래밍에 대한 관심을 핵심 관점, 부가 관점으로 나누어서 관심 기준으로 모듈화하는 것을 의미.

■ 이식 가능한 서비스 추상화란?
PSA( Portable Service Abstraction)의 예제로는
클라리언트의 매핑과 클래스, 메서드의 매핑을 위한 애너테이션이 있다.

스프링에서 데이터베이스에 접근하기 위한 기술로 JPA, MyBatis, JDBC
여기에서 어떤 기술을 사용하든 일관된 방식으로 데이터베이스에 접근하도록 인터페이스를 지원한다.

WAS 도 PSA의 예시중 하나
코드는 그대로 두고 WAS를 톰캣이 아닌 언더토우, 네티와 같은 다른 곳에서 실행해도 기존 코드를 그대로 사용가능.

2.3 스프링 부트3 둘러보기

■ 스프링 공식 문서
스프링 공식 Dependency Version 문서
bit.ly/3N0vENa

스프링 종류 참고(깃허브)
bit.ly/40o8bZd

■ 자동구성
스프링 부트는 서버를 시작할 때 구성 파일을 읽어와서 설정한다. 이를 자동 설정이라 한다.
자동 설정은 META-INF에 있는 spring.factories 파일에 담겨 있다.

■ 스프링 부트3에서 변경되는 내용
- 패키지 네임스페이스가 javax.*에서 jakarta.*로 변경
- GraalVM 네이티브 이미지를 공식 지원
 : JVM 실행 파일과 비교해 네이티브 이미지를 사용하면 가동 시간이 짧아지고 메모리를 더 적게 소모한다.

2.4 스프링 부트 3코드 이해하기

@springBootConfiguration
스프링부트 관련 설정을 나타내는 애너테이션
: @Configuration을 상속해서 만든 애너테이션

@ComponentScan
사용자가 등록한 빈을 읽고 등록하는 애너테이션
: @Component라는 애너테이션을 가진 클래스들을 찾아 빈으로 등록하는 역할.
  - @Configuration : 설정 파일 등록
  - @Repository  : ORM 매핑
  - @Controller, @RestController : 라우터
  - @Service : 비즈니스 로직

@EnableAutoConfiguration
스프링 부트에서 자동 구성을 활성화하는 애너테이

■ 핵심 요약
1. 스프링은 앤터프라이즈 애플리켕션을 쉽게 개발할 수 있도록 도와주는 프레임워크이다.
2. IoC는 제어의 역전, DI는 의존성 주입을 뜻한다.
3. 스프링부트는 스프링을 더 빠르고 쉽게 사용하기 위한 도구로서 스타터와 자동 구성을 제공한다.
4. 애너테이션은 자바 소스 코드에 추가하는 표식. 보통 @기호를 앞에 붙여서 사용하며,
   JDK 1.5 버전부터 사용할 수 있다. 
  애너테이션은 메타 데이터(데이터에 대한 설명을 담고 있는 데이터)의 비중이 가장 크다.
5. @SpringBootApplication은 스프링 부트 관련된 설정을 하는 @SpringBootConfiguration
  , 사용자가 등록한 빈을 읽고 등록하는 @ComponentScan,
  , 자동 설정으로 등록되는 빈을 읽고 등록하는 @EnableAutoConfiguration으로 이루어져 있다.
6. @Component 애너테이션이 있는 클래스는 빈으로 등록되며
  @Controller, @RestController, @Configuration, @Repository, @Service 
  모두
  @Component 애너테이션을 가지고 있다. 
  때에 따라 알맞은 애너테이션을 선택해야 한다.

======================================
